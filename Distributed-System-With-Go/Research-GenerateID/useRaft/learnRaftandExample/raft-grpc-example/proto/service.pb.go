// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto // import "raft_grpc/proto"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddWordRequest struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddWordRequest) Reset()         { *m = AddWordRequest{} }
func (m *AddWordRequest) String() string { return proto.CompactTextString(m) }
func (*AddWordRequest) ProtoMessage()    {}
func (*AddWordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_a8816746805a6761, []int{0}
}
func (m *AddWordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddWordRequest.Unmarshal(m, b)
}
func (m *AddWordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddWordRequest.Marshal(b, m, deterministic)
}
func (dst *AddWordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddWordRequest.Merge(dst, src)
}
func (m *AddWordRequest) XXX_Size() int {
	return xxx_messageInfo_AddWordRequest.Size(m)
}
func (m *AddWordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddWordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddWordRequest proto.InternalMessageInfo

func (m *AddWordRequest) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

type AddWordResponse struct {
	CommitIndex          uint64   `protobuf:"varint,1,opt,name=commit_index,json=commitIndex,proto3" json:"commit_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddWordResponse) Reset()         { *m = AddWordResponse{} }
func (m *AddWordResponse) String() string { return proto.CompactTextString(m) }
func (*AddWordResponse) ProtoMessage()    {}
func (*AddWordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_a8816746805a6761, []int{1}
}
func (m *AddWordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddWordResponse.Unmarshal(m, b)
}
func (m *AddWordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddWordResponse.Marshal(b, m, deterministic)
}
func (dst *AddWordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddWordResponse.Merge(dst, src)
}
func (m *AddWordResponse) XXX_Size() int {
	return xxx_messageInfo_AddWordResponse.Size(m)
}
func (m *AddWordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddWordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddWordResponse proto.InternalMessageInfo

func (m *AddWordResponse) GetCommitIndex() uint64 {
	if m != nil {
		return m.CommitIndex
	}
	return 0
}

type GetWordsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWordsRequest) Reset()         { *m = GetWordsRequest{} }
func (m *GetWordsRequest) String() string { return proto.CompactTextString(m) }
func (*GetWordsRequest) ProtoMessage()    {}
func (*GetWordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_a8816746805a6761, []int{2}
}
func (m *GetWordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWordsRequest.Unmarshal(m, b)
}
func (m *GetWordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWordsRequest.Marshal(b, m, deterministic)
}
func (dst *GetWordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWordsRequest.Merge(dst, src)
}
func (m *GetWordsRequest) XXX_Size() int {
	return xxx_messageInfo_GetWordsRequest.Size(m)
}
func (m *GetWordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWordsRequest proto.InternalMessageInfo

type GetWordsResponse struct {
	ReadAtIndex          uint64   `protobuf:"varint,1,opt,name=read_at_index,json=readAtIndex,proto3" json:"read_at_index,omitempty"`
	BestWords            []string `protobuf:"bytes,2,rep,name=best_words,json=bestWords,proto3" json:"best_words,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWordsResponse) Reset()         { *m = GetWordsResponse{} }
func (m *GetWordsResponse) String() string { return proto.CompactTextString(m) }
func (*GetWordsResponse) ProtoMessage()    {}
func (*GetWordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_a8816746805a6761, []int{3}
}
func (m *GetWordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWordsResponse.Unmarshal(m, b)
}
func (m *GetWordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWordsResponse.Marshal(b, m, deterministic)
}
func (dst *GetWordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWordsResponse.Merge(dst, src)
}
func (m *GetWordsResponse) XXX_Size() int {
	return xxx_messageInfo_GetWordsResponse.Size(m)
}
func (m *GetWordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWordsResponse proto.InternalMessageInfo

func (m *GetWordsResponse) GetReadAtIndex() uint64 {
	if m != nil {
		return m.ReadAtIndex
	}
	return 0
}

func (m *GetWordsResponse) GetBestWords() []string {
	if m != nil {
		return m.BestWords
	}
	return nil
}

func init() {
	proto.RegisterType((*AddWordRequest)(nil), "AddWordRequest")
	proto.RegisterType((*AddWordResponse)(nil), "AddWordResponse")
	proto.RegisterType((*GetWordsRequest)(nil), "GetWordsRequest")
	proto.RegisterType((*GetWordsResponse)(nil), "GetWordsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExampleClient is the client API for Example service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExampleClient interface {
	AddWord(ctx context.Context, in *AddWordRequest, opts ...grpc.CallOption) (*AddWordResponse, error)
	GetWords(ctx context.Context, in *GetWordsRequest, opts ...grpc.CallOption) (*GetWordsResponse, error)
}

type exampleClient struct {
	cc *grpc.ClientConn
}

func NewExampleClient(cc *grpc.ClientConn) ExampleClient {
	return &exampleClient{cc}
}

func (c *exampleClient) AddWord(ctx context.Context, in *AddWordRequest, opts ...grpc.CallOption) (*AddWordResponse, error) {
	out := new(AddWordResponse)
	err := c.cc.Invoke(ctx, "/Example/AddWord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleClient) GetWords(ctx context.Context, in *GetWordsRequest, opts ...grpc.CallOption) (*GetWordsResponse, error) {
	out := new(GetWordsResponse)
	err := c.cc.Invoke(ctx, "/Example/GetWords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExampleServer is the server API for Example service.
type ExampleServer interface {
	AddWord(context.Context, *AddWordRequest) (*AddWordResponse, error)
	GetWords(context.Context, *GetWordsRequest) (*GetWordsResponse, error)
}

func RegisterExampleServer(s *grpc.Server, srv ExampleServer) {
	s.RegisterService(&_Example_serviceDesc, srv)
}

func _Example_AddWord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddWordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleServer).AddWord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Example/AddWord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleServer).AddWord(ctx, req.(*AddWordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Example_GetWords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleServer).GetWords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Example/GetWords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleServer).GetWords(ctx, req.(*GetWordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Example_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Example",
	HandlerType: (*ExampleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddWord",
			Handler:    _Example_AddWord_Handler,
		},
		{
			MethodName: "GetWords",
			Handler:    _Example_GetWords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_a8816746805a6761) }

var fileDescriptor_service_a8816746805a6761 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x40, 0x5b, 0x2d, 0xd6, 0x1d, 0xad, 0xbb, 0x3b, 0xa7, 0x52, 0x10, 0x6a, 0xf0, 0xd0, 0x53,
	0xc4, 0x8f, 0x3f, 0x50, 0x41, 0xc4, 0x6b, 0x40, 0x04, 0x2f, 0x21, 0xdd, 0x8c, 0xb2, 0xd0, 0x6d,
	0x62, 0x12, 0xb5, 0x3f, 0x5f, 0x92, 0xae, 0x4a, 0x73, 0x4a, 0x78, 0x4c, 0x1e, 0x6f, 0x02, 0x13,
	0x4f, 0xee, 0xab, 0x6d, 0x88, 0x5b, 0x67, 0x82, 0x61, 0x97, 0x70, 0xb6, 0xd4, 0xfa, 0xc5, 0x38,
	0x2d, 0xe8, 0xe3, 0x93, 0x7c, 0x40, 0x84, 0xd1, 0xb7, 0x71, 0x7a, 0x3a, 0x9c, 0x0f, 0x17, 0x85,
	0x48, 0x77, 0x76, 0x07, 0xe5, 0xdf, 0x94, 0xb7, 0x66, 0xe3, 0x09, 0x2f, 0xe0, 0xb4, 0x31, 0x5d,
	0xd7, 0x06, 0xd9, 0x6e, 0x34, 0x6d, 0xd3, 0xf8, 0x48, 0x9c, 0xec, 0xd8, 0x53, 0x44, 0xac, 0x86,
	0xf2, 0x91, 0x42, 0x7c, 0xe5, 0x7b, 0x39, 0x7b, 0x86, 0xea, 0x1f, 0xf5, 0x26, 0x06, 0x13, 0x47,
	0x4a, 0x4b, 0x95, 0xa9, 0x22, 0x5c, 0xee, 0x54, 0x78, 0x0e, 0xb0, 0x22, 0x1f, 0x64, 0xac, 0xf1,
	0xd3, 0x83, 0xf9, 0xe1, 0xa2, 0x10, 0x45, 0x24, 0x49, 0x75, 0xb3, 0x86, 0xf1, 0xc3, 0x56, 0x75,
	0x76, 0x4d, 0xc8, 0x61, 0xdc, 0xa7, 0x62, 0xc9, 0xf7, 0x57, 0x9b, 0x55, 0x3c, 0xdb, 0x82, 0x0d,
	0xf0, 0x1a, 0x8e, 0x7f, 0x8b, 0xb0, 0xe2, 0x59, 0xef, 0xac, 0xe6, 0x79, 0x2e, 0x1b, 0xdc, 0xd7,
	0xaf, 0xa5, 0x53, 0x6f, 0x41, 0xbe, 0x3b, 0xdb, 0x5c, 0xa5, 0x6f, 0x5c, 0x1d, 0xa5, 0xe3, 0xf6,
	0x27, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x17, 0xef, 0x25, 0x5e, 0x01, 0x00, 0x00,
}
